/* Script for ld -r: link without relocation */
/* Copyright (C) 2014-2015 Free Software Foundation, Inc.
   Copying and distribution of this script, with or without modification,
   are permitted in any medium without royalty provided the copyright
   notice and this notice are preserved.  */
OUTPUT_FORMAT("elf32-microblaze", "elf32-microblaze",
	      "elf32-microblazeel")
/**/
_TEXT_START_ADDR = DEFINED(_TEXT_START_ADDR) ? _TEXT_START_ADDR : 0x50;
_HEAP_SIZE = DEFINED(_HEAP_SIZE) ? _HEAP_SIZE : 0x0;
_STACK_SIZE = DEFINED(_STACK_SIZE) ? _STACK_SIZE : 0x400;
SECTIONS
{
  .vectors.reset 0x0 : { KEEP (*(.vectors.reset)) } = 0
  .vectors.sw_exception 0x8 : { KEEP (*(.vectors.sw_exception)) } = 0
  .vectors.interrupt 0x10 : { KEEP (*(.vectors.interrupt)) } = 0
  .vectors.debug_sw_break 0x18 : { KEEP (*(.vectors.debug_sw_break)) } = 0
  .vectors.hw_exception 0x20 : { KEEP (*(.vectors.hw_exception)) } = 0
  .text : {
  }
  .init : { KEEP (*(.init))	} =0
  .fini : { KEEP (*(.fini))	} =0
  .rodata : {
    ; /* Is this needed? */
  }
  /* Alignments by 8 to ensure that _SDA2_BASE_ on a word boundary */
  /* Note that .sdata2 and .sbss2 must be contiguous */
  .sdata2 : {
  }
  .sbss2 : {

  }
  .data : {
    ; /* Is this needed? */
  }
   /* Added to handle pic code */
  .got : {
  }
  .got1 : {
  }
  .got2 : {
  }
  /* Added by Sathya to handle C++ exceptions */
  .eh_frame : {
  }
  .jcr : {
  }
  .gcc_except_table : {
  }
  /* Alignments by 8 to ensure that _SDA_BASE_ on a word boundary */
  /* Note that .sdata and .sbss must be contiguous */
  .sdata : {
  }
  .sbss : {

  }
  .bss : {

  }
  .heap : {
  }
  .stack : {
  }
  .tdata : {
  }
  .tbss : {
  }
}
